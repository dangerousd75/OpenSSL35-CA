##### OpenSSL RootCA Config File
## R o o t C A
## R o o t C A
## R o o t C A
####################
### CA CA  CA CA ###
####################
[ ca ]
default_ca = RootCA_default

[ CA_default ]
#EMpty, should be specified directly

[ RootCA_default ]
# Directory names
dir             = /pki/rootca
certs           = $dir/dircerts
#crl_dir         = $dir/dircrls
new_certs_dir   = $dir/newcerts # What is the difference?
database        = $dir/certs.db
serial          = $dir/serial.db
RANDFILE        = $dir/private/.rand #was

# Files for Root CA key and certificate.
private_key       = $dir/private/rootca.key
certificate       = $dir/dircerts/rootca.crt

# Parameters for CRLs
crlnumber         = $dir/crlnumber.db
crl               = $dir/rootca.crl
crl_extensions    = crl_ext
default_crl_days  = 180

# Hashing ALgorithm
default_md        = sha512

name_opt          = ca_default
cert_opt          = ca_default
default_days      = 90
preserve          = no ##
policy            = policy_strict  # strictas default

[ PolicyCA01_default ]
# Directory names
dir             = /pki/policyca01
certs           = $dir/dircerts
#crl_dir         = $dir/dircrls
new_certs_dir   = $dir/newcerts # What is the difference?
database        = $dir/certs.db
serial          = $dir/serial.db
RANDFILE        = $dir/private/.rand #was

# Files for Root CA key and certificate.
private_key       = $dir/private/policyca01.key
certificate       = $dir/certs/policyca01.crt

# Parameters for CRLs
crlnumber         = $dir/crlnumber.db
crl               = $dir/policyca01.crl
crl_extensions    = crl_ext
default_crl_days  = 90

# Hashing ALgorithm
default_md        = sha512

name_opt          = ca_default
cert_opt          = ca_default
default_days      = 60
preserve          = no ##
policy            = policy_strict  # strictas default

[ policy_strict ]
# The root CA signes only matching PolicyCAs or SubCAs
countryName             = match
stateOrProvinceName     = match
organizationName        = match
organizationalUnitName  = optional
commonName              = supplied
emailAddress            = optional

[ policy_loose ]
# THe RootCA signes almost every PolicyCA Request.Not a good idea
countryName             = optional
stateOrProvinceName     = optional
localityName            = optional
organizationName        = optional
organizationalUnitName  = optional
commonName              = supplied
emailAddress            = optional

####################
### REQ REQ REQ  ###
####################
[ req ]
default_bits        = 4096
distinguished_name  = req_distinguished_name
string_mask         = utf8only
default_md          = sha512
x509_extensions     = v3_ca # should be passedasparameter forva_rootca,etc.

[ req_distinguished_name ]
countryName                     = DE
stateOrProvinceName             = Baden-Wuerttemberg
localityName                    = Locality Name
0.organizationName              = Organization Name
organizationalUnitName          = OU Name
commonName                      = Common Name
emailAddress                    = Email Address


[ req_rootca_distinguished_name ]
countryName                     = DE
stateOrProvinceName             = Baden-Wuerttemberg
localityName                    = Stuttgart
0.organizationName              = DmanSoft
organizationalUnitName          = CERT
commonName                      = RootCA
emailAddress                    = pki@dmansoft.com

[ req_policyca01_distinguished_name ]
countryName                     = DE
stateOrProvinceName             = Baden-Wuerttemberg
localityName                    = Stuttgart
0.organizationName              = DmanSoft
organizationalUnitName          = CERT
commonName                      = PolicyCA01
emailAddress                    = pki@dmansoft.com

[ req_subca01_distinguished_name ]
countryName                     = DE
stateOrProvinceName             = Baden-Wuerttemberg
localityName                    = Stuttgart
0.organizationName              = DmanSoft
organizationalUnitName          = CERT
commonName                      = SubCA01
emailAddress                    = pki@dmansoft.com

# Default not needed
#countryName_default             = DE
#stateOrProvinceName_default     = Germany
#localityName_default            =
#0.organizationName_default      = 
#organizationalUnitName_default  =
#emailAddress_default            =

[ v3_ca ]
#### Kept empty, specific va_*_ca should be used.
#subjectKeyIdentifier = hash
#authorityKeyIdentifier = keyid:always,issuer
#basicConstraints = critical, CA:true, pathlen:2
#keyUsage = critical, digitalSignature, cRLSign, keyCertSign

[ v3_root_ca ]
# Originally called v3_ca
# CA Config, should be for RootCA
subjectKeyIdentifier = hash
authorityKeyIdentifier = keyid:always,issuer
basicConstraints = critical, CA:true, pathlen:2
keyUsage = critical, digitalSignature, cRLSign, keyCertSign
crlDistributionPoints = @crl_url_rootca

[ crl_url_rootca ]
URI.0 = http://pki.dmansoft.com//CertEnroll/rootca.crl

[ v3_policy_ca ]
# CA Config, should be for PolicyCA
subjectKeyIdentifier = hash
authorityKeyIdentifier = keyid:always,issuer
basicConstraints = critical, CA:true, pathlen:1
keyUsage = critical, digitalSignature, cRLSign, keyCertSign
crlDistributionPoints = @crl_url_policyca

[ crl_url_policyca ]
URI.0 = http://pki.dmansoft.com//CertEnroll/policyca01.crl

[ v3_intermediate_ca ]
# CA Config,for SubCA / Intermediary
subjectKeyIdentifier = hash
authorityKeyIdentifier = keyid:always,issuer
basicConstraints = critical, CA:true, pathlen:0
keyUsage = critical, digitalSignature, cRLSign, keyCertSign
crlDistributionPoints = @crl_url_subca

[ crl_url_subca01 ]
URI.0 = http://pki.dmansoft.com//CertEnroll/subca01.crl

####################
## CA Services, CRL and OCSP ##
###############################
[ crl_ext ]
authorityKeyIdentifier=keyid:always

[ ocsp ]
basicConstraints = CA:FALSE
subjectKeyIdentifier = hash
authorityKeyIdentifier = keyid,issuer
keyUsage = critical, digitalSignature
extendedKeyUsage = critical, OCSPSigning


##########
### Templates ###
#################
[ usr_cert ]
basicConstraints = CA:FALSE
nsCertType = client, email
subjectKeyIdentifier = hash
authorityKeyIdentifier = keyid,issuer
keyUsage = critical, nonRepudiation, digitalSignature, keyEncipherment
extendedKeyUsage = clientAuth, emailProtection
nsComment = "COmments about the certificate"

[ server_cert ]
# Server Auth Cert, non TLS
basicConstraints = CA:FALSE
nsCertType = server
subjectKeyIdentifier = hash
authorityKeyIdentifier = keyid,issuer:always
keyUsage = critical, digitalSignature, keyEncipherment
extendedKeyUsage = serverAuth
nsComment = "COmments about the certificate"

[ webserver_cert ]
# WebServer TLS/HTTPS, max 90 Days
basicConstraints = CA:FALSE
nsCertType = server
subjectKeyIdentifier = hash
authorityKeyIdentifier = keyid,issuer:always
keyUsage = critical, digitalSignature, keyEncipherment
extendedKeyUsage = serverAuth
nsComment = "COmments about the certificate"